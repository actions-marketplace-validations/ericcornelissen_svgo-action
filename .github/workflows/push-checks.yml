name: Code Validation
on:
  push:
  pull_request:

permissions: read-all

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - name: Harden runner
        uses: step-security/harden-runner@dd2c410b088af7c0dc8046f3ac9a8f4148492a95
        with:
          egress-policy: block
          allowed-endpoints: >
            api.github.com:443
            artifactcache.actions.githubusercontent.com:443
            github.com:443
            nodejs.org:443
            objects.githubusercontent.com:443
            registry.npmjs.org:443
            si05acprodeus1file1.blob.core.windows.net:443
      - name: Checkout Repository
        uses: actions/checkout@2541b1294d2704b0964813337f33b291d3f8596b
      - name: Install Node.js
        uses: actions/setup-node@2fddd8803e2f5c9604345a0b591c3020ee971a93
        with:
          cache: npm
          node-version-file: .nvmrc
      - name: Install Dependencies
        run: npm ci
      - name: Build SVGO Action
        run: npm run build
  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - name: Harden runner
        uses: step-security/harden-runner@dd2c410b088af7c0dc8046f3ac9a8f4148492a95
        with:
          egress-policy: block
          allowed-endpoints: >
            api.github.com:443
            artifactcache.actions.githubusercontent.com:443
            github.com:443
            nodejs.org:443
            objects.githubusercontent.com:443
            registry.npmjs.org:443
            si05acprodeus1file1.blob.core.windows.net:443
      - name: Checkout Repository
        uses: actions/checkout@2541b1294d2704b0964813337f33b291d3f8596b
      - name: Install Node.js
        uses: actions/setup-node@2fddd8803e2f5c9604345a0b591c3020ee971a93
        with:
          cache: npm
          node-version-file: .nvmrc
      - name: Install Dependencies
        run: npm ci
      - name: Lint Source Code
        run: npm run lint
  test:
    name: Test - ${{ matrix.type }}
    needs: [build]
    strategy:
      matrix:
        type:
          - unit
          - integration
    runs-on: ubuntu-latest
    if: ${{ always() }}
    steps:
      - name: Harden runner
        uses: step-security/harden-runner@dd2c410b088af7c0dc8046f3ac9a8f4148492a95
        with:
          egress-policy: block
          allowed-endpoints: >
            api.github.com:443
            artifactcache.actions.githubusercontent.com:443
            codecov.io:443
            github.com:443
            nodejs.org:443
            objects.githubusercontent.com:443
            registry.npmjs.org:443
            si05acprodeus1file1.blob.core.windows.net:443
            storage.googleapis.com:443
            uploader.codecov.io:443
      - name: Checkout Repository
        uses: actions/checkout@2541b1294d2704b0964813337f33b291d3f8596b
      - name: Install Node.js
        uses: actions/setup-node@2fddd8803e2f5c9604345a0b591c3020ee971a93
        with:
          cache: npm
          node-version-file: .nvmrc
      - name: Cache Jest
        uses: actions/cache@fd5de65bc895cf536527842281bea11763fefd77
        with:
          path: .cache/jest
          key: ${{ runner.os }}-jest-${{ matrix.type }}-${{ hashFiles('package-lock.json') }}-${{ github.run_number }}
          restore-keys: |
            ${{ runner.os }}-jest-${{ matrix.type }}-${{ hashFiles('package-lock.json') }}-
            ${{ runner.os }}-jest-${{ matrix.type }}-
      - name: Install Dependencies
        run: npm ci
      - name: Run Tests (${{ matrix.type }})
        run: npm run coverage:${{ matrix.type }}
        env:
          CI: true
      - name: Upload Code Coverage
        uses: codecov/codecov-action@81cd2dc8148241f03f5839d295e000b8f761e378
        if: ${{ always() }}
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          file: ./_reports/coverage/${{ matrix.type }}/lcov.info
          flags: ${{ matrix.type }}
  test-e2e:
    name: Test - end-to-end (${{ matrix.test.description }})
    needs: [test]
    strategy:
      fail-fast: false
      matrix:
        test:
          - description: built-in, v2
            svgo-version: 2
            svgo-config: test/end-to-end/svgo.config.cjs
          - description: project, v1
            svgo-version: project
            svgo-config: test/end-to-end/.svgo.yml
            project-svgo-version: ^1.0.0
          - description: project, v2
            svgo-version: project
            svgo-config: test/end-to-end/svgo.config.cjs
            project-svgo-version: ^2.0.0
    runs-on: ubuntu-latest
    steps:
      - name: Harden runner
        uses: step-security/harden-runner@dd2c410b088af7c0dc8046f3ac9a8f4148492a95
        with:
          egress-policy: block
          allowed-endpoints: >
            api.github.com:443
            artifactcache.actions.githubusercontent.com:443
            github.com:443
            nodejs.org:443
            objects.githubusercontent.com:443
            registry.npmjs.org:443
            si05acprodeus1file1.blob.core.windows.net:443
      - name: Checkout Repository
        uses: actions/checkout@2541b1294d2704b0964813337f33b291d3f8596b
      - name: Install Node.js
        uses: actions/setup-node@2fddd8803e2f5c9604345a0b591c3020ee971a93
        with:
          cache: npm
          node-version-file: .nvmrc
      - name: Install Dependencies
        run: npm ci
      - name: Install Package-local SVGO
        if: ${{ matrix.test.svgo-version == 'project' }}
        run: npm install --no-save svgo@${{ matrix.test.project-svgo-version }}
      - name: Build SVGO Action
        run: npm run build
      - name: Get the content of SVGs
        id: original-svgs
        run: |
          export SVG=$(cat test/end-to-end/not-optimized-1.svg)
          SVG="${SVG//'%'/'%25'}"
          SVG="${SVG//$'\n'/'%0A'}"
          SVG="${SVG//$'\r'/'%0D'}"
          echo "::set-output name=svg-one::$SVG"

          export SVG=$(cat test/end-to-end/not-optimized-2.svg)
          SVG="${SVG//'%'/'%25'}"
          SVG="${SVG//$'\n'/'%0A'}"
          SVG="${SVG//$'\r'/'%0D'}"
          echo "::set-output name=svg-two::$SVG"

          export SVG=$(cat test/end-to-end/optimized-1.svg)
          SVG="${SVG//'%'/'%25'}"
          SVG="${SVG//$'\n'/'%0A'}"
          SVG="${SVG//$'\r'/'%0D'}"
          echo "::set-output name=optimized-svg-one::$SVG"

          export SVG=$(cat test/end-to-end/ignore/ignored-1.svg)
          SVG="${SVG//'%'/'%25'}"
          SVG="${SVG//$'\n'/'%0A'}"
          SVG="${SVG//$'\r'/'%0D'}"
          echo "::set-output name=ignored-svg-one::$SVG"
      - name: Run SVGO Action
        id: svgo
        env:
          SVGO_ACTION_E2E_TEST: true
        uses: ./
        with:
          repo-token: ${{ secrets.GITHUB_TOKEN }}
          svgo-config: ${{ matrix.test.svgo-config }}
          svgo-version: ${{ matrix.test.svgo-version }}
          ignore: |
            test/end-to-end/ignore/*
      - name: Check the output value
        run: |
          if ! [ "${{ steps.svgo.outputs.DID_OPTIMIZE }}" = "true" ]; then
            exit 1
          fi

          if ! [ "${{ steps.svgo.outputs.SVG_COUNT }}" = "3" ]; then
            exit 2
          fi

          if ! [ "${{ steps.svgo.outputs.OPTIMIZED_COUNT }}" = "2" ]; then
            exit 3
          fi
      - name: Check the content of newly optimized SVGs
        run: |
          export SVG=$(cat test/end-to-end/not-optimized-1.svg)
          if [[ '${{ steps.original-svgs.outputs.svg-one }}' = $SVG ]]; then
            exit 4
          fi

          export SVG=$(cat test/end-to-end/not-optimized-2.svg)
          if [[ '${{ steps.original-svgs.outputs.svg-two }}' = $SVG ]]; then
            exit 5
          fi
      - name: Check the content of already optimized SVGs
        run: |
          export SVG=$(cat test/end-to-end/optimized-1.svg)
          if ! [[ '${{ steps.original-svgs.outputs.optimized-svg-one }}' = $SVG ]]; then
            exit 6
          fi
      - name: Check the content of ignored SVGs
        run: |
          export SVG=$(cat test/end-to-end/ignore/ignored-1.svg)
          if ! [[ '${{ steps.original-svgs.outputs.ignored-svg-one }}' = $SVG ]]; then
            exit 7
          fi
  test-mutation:
    name: Test - mutation
    needs: [test]
    runs-on: ubuntu-latest
    if: ${{ github.ref_name == 'main' || github.ref_name == 'main-v2' }}
    steps:
      - name: Harden runner
        uses: step-security/harden-runner@dd2c410b088af7c0dc8046f3ac9a8f4148492a95
        with:
          egress-policy: block
          allowed-endpoints: >
            api.github.com:443
            artifactcache.actions.githubusercontent.com:443
            dashboard.stryker-mutator.io:443
            github.com:443
            nodejs.org:443
            objects.githubusercontent.com:443
            registry.npmjs.org:443
            si05acprodeus1file1.blob.core.windows.net:443
      - name: Checkout Repository
        uses: actions/checkout@2541b1294d2704b0964813337f33b291d3f8596b
      - name: Install Node.js
        uses: actions/setup-node@2fddd8803e2f5c9604345a0b591c3020ee971a93
        with:
          cache: npm
          node-version-file: .nvmrc
      - name: Install Dependencies
        run: npm ci
      - name: Run Mutation Tests
        run: npm run test:mutation
        env:
          CI: true
          STRYKER_DASHBOARD_API_KEY: ${{ secrets.STRYKER_DASHBOARD_TOKEN }}
  vet:
    name: Vet
    runs-on: ubuntu-latest
    steps:
      - name: Harden runner
        uses: step-security/harden-runner@dd2c410b088af7c0dc8046f3ac9a8f4148492a95
        with:
          egress-policy: block
          allowed-endpoints: >
            api.github.com:443
            artifactcache.actions.githubusercontent.com:443
            github.com:443
            nodejs.org:443
            objects.githubusercontent.com:443
            registry.npmjs.org:443
            si05acprodeus1file1.blob.core.windows.net:443
      - name: Checkout Repository
        uses: actions/checkout@2541b1294d2704b0964813337f33b291d3f8596b
      - name: Install Node.js
        uses: actions/setup-node@2fddd8803e2f5c9604345a0b591c3020ee971a93
        with:
          cache: npm
          node-version-file: .nvmrc
      - name: Install Dependencies
        run: npm ci
      - name: Vet
        run: npm run vet
